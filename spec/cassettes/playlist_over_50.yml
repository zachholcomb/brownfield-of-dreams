---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE API KEY>&maxResults=50&pageToken=&part=snippet,contentDetails&playlistId=PLlk5QLvONKj6agKXh3yx_O24lwOcYkOqf
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Mon, 11 May 2020 17:02:24 GMT
      Date:
      - Mon, 11 May 2020 17:02:24 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"Dn5xIderbhAnUk5TAW0qkFFir0M/T2mOgEwd89tMp3Gbs8prSudtw6o"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Mon, 11 May 2020 17:02:24 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE API KEY>&maxResults=50&pageToken=CDIQAA&part=snippet,contentDetails&playlistId=PLlk5QLvONKj6agKXh3yx_O24lwOcYkOqf
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Mon, 11 May 2020 17:02:25 GMT
      Date:
      - Mon, 11 May 2020 17:02:25 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"Dn5xIderbhAnUk5TAW0qkFFir0M/sDCHxpGYuUPVTBwrO5_TKIimVVg"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Mon, 11 May 2020 17:02:25 GMT
recorded_with: VCR 5.1.0
